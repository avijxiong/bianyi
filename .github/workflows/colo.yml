name: Build colo

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            suffix: .exe
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: linux
            goarch: amd64
            suffix: ""

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      working-directory: ./colo源码
      run: |
        go mod download

    - name: Build
      working-directory: ./colo源码
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: go build -v -o ../colo${{ matrix.suffix }} .

    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        name: colo-${{ github.event.inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./colo${{ matrix.suffix }}

    - name: Prepare complete package
      run: |
        mkdir -p colo_package
        cp colo${{ matrix.suffix }} colo_package/
        cp ips-v4.txt colo_package/ || true
        cp colo/ips-v4.txt colo_package/ || true
        cp colo/ips-v6.txt colo_package/ || true
        cp colo/locations.json colo_package/ || true

    - name: Upload complete package
      uses: actions/upload-artifact@v2
      with:
        name: colo-${{ github.event.inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}-complete
        path: ./colo_package

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./colo${{ matrix.suffix }}
        asset_name: colo-${{ github.event.inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}
        asset_content_type: application/octet-stream